name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'extension/package-lock.json'

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Build Core
      working-directory: ./core
      run: cargo build --release

    - name: Test Core
      working-directory: ./core
      run: cargo test

    - name: Build Extension
      working-directory: ./extension
      run: |
        npm ci
        npm run build

    - name: Test Extension
      working-directory: ./extension
      run: npm test

    - name: Package Extension
      if: startsWith(github.ref, 'refs/tags/')
      working-directory: ./extension
      run: |
        mkdir -p bin/${{ matrix.os }}
        cp ../core/target/release/smart-memory-mcp-core* bin/${{ matrix.os }}/
        npm run package

    - name: Upload Extension Package
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v3
      with:
        name: vsix-package
        path: extension/*.vsix

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
    - name: Download Extension Package
      uses: actions/download-artifact@v3
      with:
        name: vsix-package
        path: extension

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: extension/*.vsix
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to VS Code Marketplace
      if: success()
      run: |
        npx vsce publish -p ${{ secrets.VSCE_PAT }} --packagePath extension/*.vsix