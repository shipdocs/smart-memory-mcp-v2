name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  rust-build-test:
    name: Rust Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
      
      # Install protobuf compiler
      - name: Install Protobuf Compiler (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      
      - name: Install Protobuf Compiler (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install protobuf
      
      - name: Install Protobuf Compiler (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install protoc
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check Rust formatting
        run: |
          cd core
          cargo fmt -- --check
      
      - name: Build and Test
        run: |
          cd core
          cargo build --verbose
          cargo test --verbose
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rust-test-results-${{ matrix.os }}
          path: core/target/debug/deps

  node-build-test:
    name: Node.js Build and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: extension
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm install
      
      - name: Build extension
        run: npm run compile
      
      - name: Run tests
        run: npm test

  lint-format:
    name: Lint and Format
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rustfmt
        run: rustup component add rustfmt
      
      - name: Check Rust formatting
        run: |
          cd core
          cargo fmt -- --check
      
      - name: Install ESLint
        run: |
          cd extension
          npm install eslint
      
      - name: Run ESLint
        run: |
          cd extension
          npx eslint .

  security-scans:
    name: Security Scans
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Cargo Audit
        run: |
          cd core
          cargo install cargo-audit || true
          cargo audit
      
      - name: NPM Audit
        run: |
          cd extension
          npm install
          npm audit --audit-level=moderate

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
      - uses: actions/checkout@v4
      
      # Install protobuf compiler for CodeQL to analyze Rust code properly
      - name: Install Protobuf Compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: rust, javascript, typescript
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
